#!/bin/bash
if [ $ARCH == "x86_64" ]; then 
  mycc=gcc
  CC_DEB=
  WITHHOST=
elif [ $ARCH == "i686" ]; then
  mycc="gcc -m32"
  CC_DEB="gcc-multilib"
  WITHHOST=
elif [ $ARCH == "riscv64" ]; then 
  mycc=riscv64-linux-gnu-gcc-11
  CC_DEB="gcc-11-riscv64-linux-gnu"
  WITHHOST="--host=riscv64-linux-gnu"
elif [ $ARCH == "arm" ]; then 
  mycc=arm-linux-gnueabihf-gcc-11
  CC_DEB="gcc-11-arm-linux-gnueabihf"
  WITHHOST="--host=arm-linux-gnueabihf"
elif [ $ARCH == "mips" ]; then 
  mycc=mips-linux-gnu-gcc
  CC_DEB="gcc-mips-linux-gnu"
  WITHHOST="--host=mips-linux-gnu"
fi

if [ -n "$USE_READLINE" ]; then
  LUA_CONFIG=" -DLUA_USE_LINUX"
  EXT_LIB=" -L./deps/lib -ldl -lreadline"
else
  LUA_CONFIG=" -DLUA_USE_POSIX -DLUA_USE_DLOPEN"
  EXT_LIB=" -ldl"
fi

TESTS=" -DLUA_USER_H='\"ltests.h\"'"
CWARNSC=" -Wdeclaration-after-statement -Wmissing-prototypes -Wnested-externs -Wstrict-prototypes -Wc++-compat -Wold-style-definition"
CWARNSCPP=" -pedantic -Wextra -Wshadow -Wsign-compare -Wundef -Wwrite-strings -Wredundant-decls -Wdisabled-optimization -Waggregate-return -Wdouble-promotion"
CWARNS=" $CWARNSC $CWARNSCPP"

#apt install libreadline-dev
apt install $CC_DEB
if [ -n "$USE_READLINE" ]; then
  READLINE="readline-8.2"
  if [ ! -d "$READLINE" ]; then
    wget http://git.savannah.gnu.org/cgit/readline.git/snapshot/$READLINE.tar.gz
    tar xf $READLINE.tar.gz
  fi
fi

for opt in O0 O3; do
  if [ -n "$USE_READLINE" ]; then
    mkdir -p deps
    INSTALL_DIR="$(pwd)/deps"
    cd $READLINE
    CC=$mycc CFLAGS="-g -$opt" ./configure --prefix=$INSTALL_DIR --with-curses --with-shared-termcap-library=yes $WITHHOST
    make && make install
    make clean
    cd ..
  fi

  make CC="$mycc" AR=" ar rc" CFLAGS=" -I./deps/include -Wall -g -$opt -std=c99 $LUA_CONFIG $TESTS $CWARNS" MYLIBS="$EXT_LIB"
  cp lua /root/cve-output/lua/$LUA_VERSION/lua-$ARCH-gcc-$opt
  rm lua *.o
done
